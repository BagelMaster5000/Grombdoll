<Application
    x:Class="Grombdoll.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Grombdoll">
    <Application.Resources>
        <Color x:Key="GrombDarkBlue">#065a8a</Color>
        <Color x:Key="GrombDarkerBlue">#023552</Color>
        <Color x:Key="GrombRed">#ff2358</Color>
        <Color x:Key="GrombPink">#ff3394</Color>
        <Color x:Key="GrombGreen">#26ff76</Color>
        <Color x:Key="GrombYellow">#fffd96</Color>
        <Color x:Key="GrombWhite">#ffffff</Color>

        <SolidColorBrush x:Key="GrombDarkBlueBrush" Color="{DynamicResource GrombDarkBlue}" />
        <SolidColorBrush x:Key="GrombDarkerBlueBrush" Color="{DynamicResource GrombDarkerBlue}" />
        <SolidColorBrush x:Key="GrombRedBrush" Color="{DynamicResource GrombRed}" />
        <SolidColorBrush x:Key="GrombPinkBrush" Color="{DynamicResource GrombPink}" />
        <SolidColorBrush x:Key="GrombGreenBrush" Color="{DynamicResource GrombGreen}" />
        <SolidColorBrush x:Key="GrombYellowBrush" Color="{DynamicResource GrombYellow}" />
        <SolidColorBrush x:Key="GrombWhiteBrush" Color="{DynamicResource GrombWhite}" />

        <Style x:Key="BouncyButtonBehavior" TargetType="Button">
            <Setter Property="Background" Value="LightBlue" />
            <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="Border" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            <Border.RenderTransformOrigin>
                                <Point X="0.5" Y="0.5" />
                            </Border.RenderTransformOrigin>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="1.05" ScaleY="1.05" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Border" Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform CenterY="0.5" ScaleX="0.9" ScaleY="0.9" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ActionButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="TextBlock.VerticalAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="Border" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            <Border.RenderTransformOrigin>
                                <Point X="0.5" Y="0.5" />
                            </Border.RenderTransformOrigin>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="1.075" ScaleY="1.025" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Border" Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform CenterY="0.5" ScaleX="0.75" ScaleY="0.93" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="BouncyCheckBoxBehavior" TargetType="CheckBox">
            <Setter Property="Background" Value="LightBlue" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <!--  BulletDecorator is used to provide baseline alignment between the checkmark and the Content  -->
                        <BulletDecorator
                            Height="14"
                            VerticalAlignment="Top"
                            Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Grid
                                    Width="13"
                                    Height="13"
                                    VerticalAlignment="Center">
                                    <Border x:Name="Border" Background="{TemplateBinding Background}">
                                        <Border.RenderTransformOrigin>
                                            <Point X="0.5" Y="0.5" />
                                        </Border.RenderTransformOrigin>
                                        <TextBlock
                                            x:Name="CheckMark"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            FontSize="8"
                                            Foreground="{StaticResource GrombWhiteBrush}"
                                            Text="✔" />
                                    </Border>
                                </Grid>
                            </BulletDecorator.Bullet>
                            <ContentPresenter
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True" />
                        </BulletDecorator>

                        <!--  This uses Visibility to hide and show the CheckMark on IsChecked  -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="1.05" ScaleY="1.05" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform CenterY="0.5" ScaleX="0.9" ScaleY="0.9" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TransparentButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="Border" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True" />
                            <Trigger Property="IsPressed" Value="True" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
